basePath: /
definitions:
  services.Event:
    properties:
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
host: localhost:7090
info:
  contact:
    email: soberkoder@swagger.io
    name: API Support
  description: This is a sample service for managing events
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Events API
  version: "1.0"
paths:
  /delete/{id}:
    get:
      consumes:
      - application/json
      description: Delete the event by id
      parameters:
      - description: Delete event
        in: header
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.Event'
      summary: Delete an event By Id
      tags:
      - events
  /event:
    post:
      consumes:
      - application/json
      description: Create a new event with the input paylod
      parameters:
      - description: Create event
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/services.Event'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.Event'
      summary: Create a new event
      tags:
      - events
  /event/{id}:
    get:
      consumes:
      - application/json
      description: Fetch the event details by id
      parameters:
      - description: Get event
        in: header
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.Event'
      summary: Fetch an event By Id
      tags:
      - events
  /events:
    get:
      consumes:
      - application/json
      description: Get details of all events
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/services.Event'
            type: array
      summary: Get details of all events
      tags:
      - events
  /update:
    post:
      consumes:
      - application/json
      description: Updates an event with the input paylod
      parameters:
      - description: Update event
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/services.Event'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.Event'
      summary: Update an event
      tags:
      - events
swagger: "2.0"
