package main

import (
	"github.com/gorilla/mux"
	"log"
	"net/http"
	"<%= packageName %>/db"
	"<%= packageName %>/controllers"
	_ "<%= packageName %>/docs"
	ft "<%= packageName %>/fileutil"
	"<%= packageName %>/customlogger"
	// _ "swaggo-events-api/docs" // docs is generated by Swag CLI, you have to import it.
	// httpSwagger "github.com/swaggo/http-swagger"

)


var configurations RegistrationVariables

func init() {
	props, _ := ft.ReadPropertiesFile("config.properties")
	configurations = RegistrationVariables{props["service_registry"],props["service_registry_url"]}
}

// @title Events API
// @version 1.0
// @description This is a sample service for managing events
// @termsOfService http://swagger.io/terms/
// @contact.name API Support
// @contact.email soberkoder@swagger.io
// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html
// @host localhost:7090
// @BasePath /
func main() {
	props, _ := ft.ReadPropertiesFile("config.properties")
	config.DbConnect()
	customlogger.Printfun("info","Starting")    
	router := mux.NewRouter().StrictSlash(true)
	router.Use(commonMiddleware)
	registerRoutes(router)
	go ManageDiscovery(configurations)
	customlogger.Printfun("info","Service Registered with Eureka")    
	portsno  :=":"+props["service_port"]
	log.Fatal(http.ListenAndServe(portsno, router))
}

func registerRoutes (router *mux.Router){
	registerControllerRoutes(controllers.EventController{}, router)
}

func registerControllerRoutes(controller controllers.Controller, router *mux.Router) {
	controller.RegisterRoutes(router)
}

func commonMiddleware(next http.Handler) http.Handler {
	return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		w.Header().Add("Content-Type", "application/json")
		next.ServeHTTP(w, r)
	})
}
